# 端口配置
server.port=8443
# 数据源配置
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/white_jotter?serverTimezone=Asia/Shanghai&characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=wyq123
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# spring.datasource下有两个属性，其中schema为表初始化，data为数据初始化
# 默认加载schema.sql与data.sql。脚本位置可以通过如下配置改变
# spring.datasource.schema=classpath:schema.sql
# spring.datasource.data=classpath:data.sql
# 每次运行时初始化数据库，即执行schema.sql
spring.datasource.initialization-mode=always
# 将 hibernate的自动注入属性设置为 none（防止冲突，上面已经使用了spring 的注入方法）
spring.jpa.hibernate.ddl-auto=none

# 1、SpringBoot根据脚本初始化
# 结构初始化脚本文件由spring.datasource.schema属性指定，数据初始化脚本由文件spring.datasource.data属性指定。
# 这两个脚本是否执行的开关由spring.datasource.initialization-mode决定：
# always-一定执行，embedded-只对内存数据库执行，never-不执行。
# 2、JPA根据类结构初始化
# @Entity注解的类将会被初始化一张数据库表。
# 是否执行的开关由spring.jpa.hibernate.ddl-auto属性控制，
# 可为create/update/create-drop/none/validate，其中none和validate为不执行
# 3、让SpringBoot根据脚本和让JPA根据实体类进行初始化，两者之中选择一个即可。

#静态文件路径
# spring.mvc.static-path-pattern=/resources/**
# spring.resources.static-locations=classpath:/static/